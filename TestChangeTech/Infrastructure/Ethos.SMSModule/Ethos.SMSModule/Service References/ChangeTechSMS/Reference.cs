//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ethos.SMSModule.ChangeTechSMS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.systorvest.no/", ConfigurationName="ChangeTechSMS.SystorSMSSoap")]
    public interface SystorSMSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/GetUnreadFromMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string GetUnreadFromMobile(string sUser, string sPass, bool bMarkRead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/MarkIncomingAsRead", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string MarkIncomingAsRead(string sUser, string sPass, string sPKList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/ReserveGSM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool ReserveGSM(string sUser, string sPass, string sGSM, bool bFixed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobile(string sMobileNumber, string sMessage, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileEx(string sMobileNumber, string sMessage, string sOriginator, string sUser, string sPass, bool bURLDecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileDelay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileDelay(string sMobileNumber, string sMessage, string sHoldUntil, string sOriginator, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileDelayNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileDelayNotify(string sMobileNumber, string sMessage, string sHoldUntil, string sOriginator, string sForeignID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileNotifyBulk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileNotifyBulk(string sMobileNumbers, string sMessage, string sOriginator, string sForeignID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileNotify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileNotify(string sMobileNumber, string sMessage, string sOriginator, string sForeignID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/GetMessageStatusLast", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string GetMessageStatusLast(long ID, int ForeignID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendSM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        long SendSM(string sMSISDN, string sSM, string sOriginator, int nForeignID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileNotifyMVP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileNotifyMVP(string sMobileNumber, string sMessage, string sOriginator, int nForeignID, int nValidity, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileNotifyMVPRPID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileNotifyMVPRPID(string sMobileNumber, string sMessage, string sOriginator, int nForeignID, int nValidity, int nRPID, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMessageToMobileFlashReplace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMessageToMobileFlashReplace(string sMobileNumber, string sMessage, string sOriginator, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/RequestAnswerTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string RequestAnswerTicket(string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/RequestOneTimePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool RequestOneTimePassword(string sMobileNumber, string sMessage, string sOrig, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/VerifyOneTimePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool VerifyOneTimePassword(string sMobileNumber, string sOneTimePW, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/PostMobileOriginated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool PostMobileOriginated(string sOriginator, string sMessage, string sRecipient, string SCTS, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/PostMobileOriginatedOp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool PostMobileOriginatedOp(string sOriginator, string sMessage, string sRecipient, string SCTS, int nOperator, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/Log", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool Log(string sMessage, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMMSToMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMMSToMobile(string sMobileNumber, string sSubject, string sData, string sOriginator, string sUser, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.systorvest.no/SendMMSToMobileBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool SendMMSToMobileBasic(string sMobileNumber, string sSubject, string sContent, string sPictureFileName, string sPictureData, string sOriginator, string sUser, string sPass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SystorSMSSoapChannel : Ethos.SMSModule.ChangeTechSMS.SystorSMSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystorSMSSoapClient : System.ServiceModel.ClientBase<Ethos.SMSModule.ChangeTechSMS.SystorSMSSoap>, Ethos.SMSModule.ChangeTechSMS.SystorSMSSoap {
        
        public SystorSMSSoapClient() {
        }
        
        public SystorSMSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SystorSMSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystorSMSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SystorSMSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetUnreadFromMobile(string sUser, string sPass, bool bMarkRead) {
            return base.Channel.GetUnreadFromMobile(sUser, sPass, bMarkRead);
        }
        
        public string MarkIncomingAsRead(string sUser, string sPass, string sPKList) {
            return base.Channel.MarkIncomingAsRead(sUser, sPass, sPKList);
        }
        
        public bool ReserveGSM(string sUser, string sPass, string sGSM, bool bFixed) {
            return base.Channel.ReserveGSM(sUser, sPass, sGSM, bFixed);
        }
        
        public bool SendMessageToMobile(string sMobileNumber, string sMessage, string sUser, string sPass) {
            return base.Channel.SendMessageToMobile(sMobileNumber, sMessage, sUser, sPass);
        }
        
        public bool SendMessageToMobileEx(string sMobileNumber, string sMessage, string sOriginator, string sUser, string sPass, bool bURLDecode) {
            return base.Channel.SendMessageToMobileEx(sMobileNumber, sMessage, sOriginator, sUser, sPass, bURLDecode);
        }
        
        public bool SendMessageToMobileDelay(string sMobileNumber, string sMessage, string sHoldUntil, string sOriginator, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileDelay(sMobileNumber, sMessage, sHoldUntil, sOriginator, sUser, sPass);
        }
        
        public bool SendMessageToMobileDelayNotify(string sMobileNumber, string sMessage, string sHoldUntil, string sOriginator, string sForeignID, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileDelayNotify(sMobileNumber, sMessage, sHoldUntil, sOriginator, sForeignID, sUser, sPass);
        }
        
        public bool SendMessageToMobileNotifyBulk(string sMobileNumbers, string sMessage, string sOriginator, string sForeignID, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileNotifyBulk(sMobileNumbers, sMessage, sOriginator, sForeignID, sUser, sPass);
        }
        
        public bool SendMessageToMobileNotify(string sMobileNumber, string sMessage, string sOriginator, string sForeignID, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileNotify(sMobileNumber, sMessage, sOriginator, sForeignID, sUser, sPass);
        }
        
        public string GetMessageStatusLast(long ID, int ForeignID, string sUser, string sPass) {
            return base.Channel.GetMessageStatusLast(ID, ForeignID, sUser, sPass);
        }
        
        public long SendSM(string sMSISDN, string sSM, string sOriginator, int nForeignID, string sUser, string sPass) {
            return base.Channel.SendSM(sMSISDN, sSM, sOriginator, nForeignID, sUser, sPass);
        }
        
        public bool SendMessageToMobileNotifyMVP(string sMobileNumber, string sMessage, string sOriginator, int nForeignID, int nValidity, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileNotifyMVP(sMobileNumber, sMessage, sOriginator, nForeignID, nValidity, sUser, sPass);
        }
        
        public bool SendMessageToMobileNotifyMVPRPID(string sMobileNumber, string sMessage, string sOriginator, int nForeignID, int nValidity, int nRPID, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileNotifyMVPRPID(sMobileNumber, sMessage, sOriginator, nForeignID, nValidity, nRPID, sUser, sPass);
        }
        
        public bool SendMessageToMobileFlashReplace(string sMobileNumber, string sMessage, string sOriginator, string sUser, string sPass) {
            return base.Channel.SendMessageToMobileFlashReplace(sMobileNumber, sMessage, sOriginator, sUser, sPass);
        }
        
        public string RequestAnswerTicket(string sUser, string sPass) {
            return base.Channel.RequestAnswerTicket(sUser, sPass);
        }
        
        public bool RequestOneTimePassword(string sMobileNumber, string sMessage, string sOrig, string sUser, string sPass) {
            return base.Channel.RequestOneTimePassword(sMobileNumber, sMessage, sOrig, sUser, sPass);
        }
        
        public bool VerifyOneTimePassword(string sMobileNumber, string sOneTimePW, string sUser, string sPass) {
            return base.Channel.VerifyOneTimePassword(sMobileNumber, sOneTimePW, sUser, sPass);
        }
        
        public bool PostMobileOriginated(string sOriginator, string sMessage, string sRecipient, string SCTS, string sUser, string sPass) {
            return base.Channel.PostMobileOriginated(sOriginator, sMessage, sRecipient, SCTS, sUser, sPass);
        }
        
        public bool PostMobileOriginatedOp(string sOriginator, string sMessage, string sRecipient, string SCTS, int nOperator, string sUser, string sPass) {
            return base.Channel.PostMobileOriginatedOp(sOriginator, sMessage, sRecipient, SCTS, nOperator, sUser, sPass);
        }
        
        public bool Log(string sMessage, string sUser, string sPass) {
            return base.Channel.Log(sMessage, sUser, sPass);
        }
        
        public bool SendMMSToMobile(string sMobileNumber, string sSubject, string sData, string sOriginator, string sUser, string sPass) {
            return base.Channel.SendMMSToMobile(sMobileNumber, sSubject, sData, sOriginator, sUser, sPass);
        }
        
        public bool SendMMSToMobileBasic(string sMobileNumber, string sSubject, string sContent, string sPictureFileName, string sPictureData, string sOriginator, string sUser, string sPass) {
            return base.Channel.SendMMSToMobileBasic(sMobileNumber, sSubject, sContent, sPictureFileName, sPictureData, sOriginator, sUser, sPass);
        }
    }
}
